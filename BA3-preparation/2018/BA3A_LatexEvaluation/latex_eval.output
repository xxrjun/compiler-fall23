State 22 conflicts: 6 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: expr

    2 expr: NUMBER
    3     | expr ADD expr
    4     | expr MINUS expr
    5     | expr FRAC expr expr
    6     | FRAC expr expr
    7     | expr POW expr
    8     | LBRACE expr RBRACE


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 2
ADD (259) 3
MINUS (260) 4
FRAC (261) 5 6
POW (262) 7
LBRACE (263) 8
RBRACE (264) 8


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
program (11)
    on left: 1, on right: 0
expr (12)
    on left: 2 3 4 5 6 7 8, on right: 1 3 4 5 6 7 8


state 0

    0 $accept: . program $end

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    program  go to state 4
    expr     go to state 5


state 1

    2 expr: NUMBER .

    $default  reduce using rule 2 (expr)


state 2

    6 expr: FRAC . expr expr

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    expr  go to state 6


state 3

    8 expr: LBRACE . expr RBRACE

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    expr  go to state 7


state 4

    0 $accept: program . $end

    $end  shift, and go to state 8


state 5

    1 program: expr .
    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    7     | expr . POW expr

    ADD    shift, and go to state 9
    MINUS  shift, and go to state 10
    FRAC   shift, and go to state 11
    POW    shift, and go to state 12

    $default  reduce using rule 1 (program)


state 6

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    6     | FRAC expr . expr
    7     | expr . POW expr

    NUMBER  shift, and go to state 1
    ADD     shift, and go to state 9
    MINUS   shift, and go to state 10
    FRAC    shift, and go to state 13
    POW     shift, and go to state 12
    LBRACE  shift, and go to state 3

    expr  go to state 14


state 7

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    7     | expr . POW expr
    8     | LBRACE expr . RBRACE

    ADD     shift, and go to state 9
    MINUS   shift, and go to state 10
    FRAC    shift, and go to state 11
    POW     shift, and go to state 12
    RBRACE  shift, and go to state 15


state 8

    0 $accept: program $end .

    $default  accept


state 9

    3 expr: expr ADD . expr

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    expr  go to state 16


state 10

    4 expr: expr MINUS . expr

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    expr  go to state 17


state 11

    5 expr: expr FRAC . expr expr

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    expr  go to state 18


state 12

    7 expr: expr POW . expr

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    expr  go to state 19


state 13

    5 expr: expr FRAC . expr expr
    6     | FRAC . expr expr

    NUMBER  shift, and go to state 1
    FRAC    shift, and go to state 2
    LBRACE  shift, and go to state 3

    expr  go to state 20


state 14

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    6     | FRAC expr expr .
    7     | expr . POW expr

    $default  reduce using rule 6 (expr)


state 15

    8 expr: LBRACE expr RBRACE .

    $default  reduce using rule 8 (expr)


state 16

    3 expr: expr . ADD expr
    3     | expr ADD expr .
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    7     | expr . POW expr

    FRAC  shift, and go to state 11
    POW   shift, and go to state 12

    $default  reduce using rule 3 (expr)


state 17

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    4     | expr MINUS expr .
    5     | expr . FRAC expr expr
    7     | expr . POW expr

    FRAC  shift, and go to state 11
    POW   shift, and go to state 12

    $default  reduce using rule 4 (expr)


state 18

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    5     | expr FRAC expr . expr
    7     | expr . POW expr

    NUMBER  shift, and go to state 1
    ADD     shift, and go to state 9
    MINUS   shift, and go to state 10
    FRAC    shift, and go to state 13
    POW     shift, and go to state 12
    LBRACE  shift, and go to state 3

    expr  go to state 21


state 19

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    7     | expr . POW expr
    7     | expr POW expr .

    FRAC  shift, and go to state 11

    $default  reduce using rule 7 (expr)


state 20

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    5     | expr FRAC expr . expr
    6     | FRAC expr . expr
    7     | expr . POW expr

    NUMBER  shift, and go to state 1
    ADD     shift, and go to state 9
    MINUS   shift, and go to state 10
    FRAC    shift, and go to state 13
    POW     shift, and go to state 12
    LBRACE  shift, and go to state 3

    expr  go to state 22


state 21

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    5     | expr FRAC expr expr .
    7     | expr . POW expr

    $default  reduce using rule 5 (expr)


state 22

    3 expr: expr . ADD expr
    4     | expr . MINUS expr
    5     | expr . FRAC expr expr
    5     | expr FRAC expr expr .
    6     | FRAC expr expr .
    7     | expr . POW expr

    $end      reduce using rule 6 (expr)
    NUMBER    reduce using rule 5 (expr)
    NUMBER    [reduce using rule 6 (expr)]
    ADD       reduce using rule 5 (expr)
    ADD       [reduce using rule 6 (expr)]
    MINUS     reduce using rule 5 (expr)
    MINUS     [reduce using rule 6 (expr)]
    FRAC      reduce using rule 5 (expr)
    FRAC      [reduce using rule 6 (expr)]
    POW       reduce using rule 5 (expr)
    POW       [reduce using rule 6 (expr)]
    LBRACE    reduce using rule 5 (expr)
    LBRACE    [reduce using rule 6 (expr)]
    RBRACE    reduce using rule 6 (expr)
    $default  reduce using rule 5 (expr)
